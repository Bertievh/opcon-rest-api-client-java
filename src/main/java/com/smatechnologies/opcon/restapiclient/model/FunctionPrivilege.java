package com.smatechnologies.opcon.restapiclient.model;

import java.util.Arrays;
import java.util.List;


/**
 * @author Pierre PINON
 */
public enum FunctionPrivilege {

    /**
     * FUNCTION GROUPS
     */
    ALL_FUNCTION_PRIVILEGES(-1, false),
    ALL_ADMINISTRATIVE_FUNCTIONS(0, false, ALL_FUNCTION_PRIVILEGES),

    ALL_JOB_MASTER_FUNCTIONS(100, true, ALL_FUNCTION_PRIVILEGES),
    ALL_DAILY_SCHEDULE_FUNCTIONS(200, true, ALL_FUNCTION_PRIVILEGES),
    ALL_SCHEDULE_OPERATION_FUNCTIONS(400, true, ALL_FUNCTION_PRIVILEGES),

    /**
     * FUNCTIONS
     */
    VIEW_LICENSE_INFORMATION(1, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_ACCESS_CODES(5, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_DEPARTMENTS(15, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_SCHEDULES(20, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_CALENDARS(30, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_MACHINES(40, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_THRESHOLDS_RESOURCES(45, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_GLOBAL_PROPERTIES(50, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_SERVICE_REQUEST(51, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_MACHINE_GROUPS(80, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_REPORTS(86, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_AUDIT_HISTORY(87, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_JOB_HISTORY(88, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    ALL_NOTIFICATION_MANAGER_FUNCTIONS(89, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    IMPORT_AND_EXPORT_SCHEDULES(90, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    ADD_JOBS_TO_MASTER_SCHEDULES(110, true, ALL_JOB_MASTER_FUNCTIONS),
    DELETE_JOBS_FROM_MASTER_SCHEDULES(120, true, ALL_JOB_MASTER_FUNCTIONS),
    MODIFY_JOBS_IN_MASTER_SCHEDULES(130, true, ALL_JOB_MASTER_FUNCTIONS),
    VIEW_JOBS_IN_MASTER_SCHEDULES(190, true, ALL_JOB_MASTER_FUNCTIONS),
    ADD_JOBS_TO_DAILY_SCHEDULES(210, true, ALL_DAILY_SCHEDULE_FUNCTIONS),
    DELETE_JOBS_FROM_DAILY_SCHEDULES(220, true, ALL_DAILY_SCHEDULE_FUNCTIONS),
    MODIFY_JOBS_IN_DAILY_SCHEDULES(230, true, ALL_DAILY_SCHEDULE_FUNCTIONS),
    BUILD_DAILY_SCHEDULES(240, false, ALL_DAILY_SCHEDULE_FUNCTIONS),
    DELETE_DAILY_SCHEDULES(250, false, ALL_SCHEDULE_OPERATION_FUNCTIONS, ALL_DAILY_SCHEDULE_FUNCTIONS),
    VIEW_SCHEDULE_BUILD_LOG(260, false, ALL_FUNCTION_PRIVILEGES),
    VIEW_JOBS_IN_DAILY_SCHEDULES(290, true, ALL_SCHEDULE_OPERATION_FUNCTIONS, ALL_DAILY_SCHEDULE_FUNCTIONS),
    ALL_REPORT_FUNCTIONS(300, true, ALL_FUNCTION_PRIVILEGES),
    VIEW_SERVICE_REQUESTS(305, false, MAINTAIN_SERVICE_REQUEST),
    MAINTAIN_VISION_WORKSPACES(315, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    VIEW_VISION_WORKSPACES(310, false, MAINTAIN_VISION_WORKSPACES),
    MAINTAIN_VISION_ACTIONS(320, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    MAINTAIN_VISION_FREQUENCIES(325, false, ALL_ADMINISTRATIVE_FUNCTIONS),
    RELEASE_SCHEDULES(410, false, ALL_SCHEDULE_OPERATION_FUNCTIONS, ALL_ADMINISTRATIVE_FUNCTIONS),
    HOLD_SCHEDULES(411, false, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    FORCE_START_SCHEDULES(412, false, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    HOLD_JOBS(420, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    RELEASE_JOBS(421, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    FORCE_START_JOBS(422, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    CANCEL_JOBS(423, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    RESTART_JOBS(424, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    MARK_JOBS_FINISHED_OK(425, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    MARK_JOBS_FAILED(426, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    SKIP_JOBS(427, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    KILL_JOBS(428, true, ALL_SCHEDULE_OPERATION_FUNCTIONS),
    VIEW_JOBS_IN_SCHEDULE_OPERATIONS(490, true, ALL_SCHEDULE_OPERATION_FUNCTIONS);

    private final int id;
    private final boolean dep;
    private final List<FunctionPrivilege> groups;

    FunctionPrivilege(int id, boolean dep, FunctionPrivilege... groups) {
        this.id = id;
        this.dep = dep;
        this.groups = (groups == null || groups.length == 0) ? null : Arrays.asList(groups);
    }

    public int getId() {
        return id;
    }

    public boolean isDep() {
        return dep;
    }

    public List<FunctionPrivilege> getGroups() {
        return groups;
    }
}
